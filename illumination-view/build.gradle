
buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven{
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }

}
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: "com.moowork.node"

node {
    version = '5.8.0'
    npmVersion = '3.8.0'
    download = true
    // distBaseUrl = Custom artifactory location here.
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')
clean.delete << file('src/main/resource/static/dist')


repositories {
    mavenCentral()
    jcenter()
}
dependencies{
    compile('org.springframework.boot:spring-boot-starter-security')
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.2.2")
    compile project(':illumination-model')
    compile project(':illumination-services')
}
bootRepackage.enabled = false
